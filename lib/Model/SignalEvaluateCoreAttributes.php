<?php
/**
 * SignalEvaluateCoreAttributes
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.64.13
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * SignalEvaluateCoreAttributes Class Doc Comment
 *
 * @category Class
 * @description The core attributes object contains additional data that can be used to assess the ACH return risk. Examples of data include:  &#x60;days_since_first_plaid_connection&#x60;: The number of days since the first time the Item was connected to an application via Plaid &#x60;plaid_connections_count_7d&#x60;: The number of times the Item has been connected to applications via Plaid over the past 7 days &#x60;plaid_connections_count_30d&#x60;: The number of times the Item has been connected to applications via Plaid over the past 30 days &#x60;total_plaid_connections_count&#x60;: The number of times the Item has been connected to applications via Plaid &#x60;is_savings_or_money_market_account&#x60;: Indicates whether the ACH transaction funding account is a savings/money market account  For the full list and detailed documentation of core attributes available, or to request that core attributes not be returned, contact Sales or your Plaid account manager
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class SignalEvaluateCoreAttributes implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'SignalEvaluateCoreAttributes';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'unauthorized_transactions_count_7d' => 'int',
        'unauthorized_transactions_count_30d' => 'int',
        'unauthorized_transactions_count_60d' => 'int',
        'unauthorized_transactions_count_90d' => 'int',
        'nsf_overdraft_transactions_count_7d' => 'int',
        'nsf_overdraft_transactions_count_30d' => 'int',
        'nsf_overdraft_transactions_count_60d' => 'int',
        'nsf_overdraft_transactions_count_90d' => 'int',
        'days_since_first_plaid_connection' => 'int',
        'plaid_connections_count_7d' => 'int',
        'plaid_connections_count_30d' => 'int',
        'total_plaid_connections_count' => 'int',
        'is_savings_or_money_market_account' => 'bool',
        'total_credit_transactions_amount_10d' => 'float',
        'total_debit_transactions_amount_10d' => 'float',
        'p50_credit_transactions_amount_28d' => 'float',
        'p50_debit_transactions_amount_28d' => 'float',
        'p95_credit_transactions_amount_28d' => 'float',
        'p95_debit_transactions_amount_28d' => 'float',
        'days_with_negative_balance_count_90d' => 'int',
        'p90_eod_balance_30d' => 'float',
        'p90_eod_balance_60d' => 'float',
        'p90_eod_balance_90d' => 'float',
        'p10_eod_balance_30d' => 'float',
        'p10_eod_balance_60d' => 'float',
        'p10_eod_balance_90d' => 'float',
        'available_balance' => 'float',
        'current_balance' => 'float',
        'balance_last_updated' => '\DateTime',
        'phone_change_count_28d' => 'int',
        'phone_change_count_90d' => 'int',
        'email_change_count_28d' => 'int',
        'email_change_count_90d' => 'int',
        'address_change_count_28d' => 'int',
        'address_change_count_90d' => 'int'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'unauthorized_transactions_count_7d' => null,
        'unauthorized_transactions_count_30d' => null,
        'unauthorized_transactions_count_60d' => null,
        'unauthorized_transactions_count_90d' => null,
        'nsf_overdraft_transactions_count_7d' => null,
        'nsf_overdraft_transactions_count_30d' => null,
        'nsf_overdraft_transactions_count_60d' => null,
        'nsf_overdraft_transactions_count_90d' => null,
        'days_since_first_plaid_connection' => null,
        'plaid_connections_count_7d' => null,
        'plaid_connections_count_30d' => null,
        'total_plaid_connections_count' => null,
        'is_savings_or_money_market_account' => null,
        'total_credit_transactions_amount_10d' => null,
        'total_debit_transactions_amount_10d' => null,
        'p50_credit_transactions_amount_28d' => null,
        'p50_debit_transactions_amount_28d' => null,
        'p95_credit_transactions_amount_28d' => null,
        'p95_debit_transactions_amount_28d' => null,
        'days_with_negative_balance_count_90d' => null,
        'p90_eod_balance_30d' => null,
        'p90_eod_balance_60d' => null,
        'p90_eod_balance_90d' => null,
        'p10_eod_balance_30d' => null,
        'p10_eod_balance_60d' => null,
        'p10_eod_balance_90d' => null,
        'available_balance' => null,
        'current_balance' => null,
        'balance_last_updated' => 'date-time',
        'phone_change_count_28d' => null,
        'phone_change_count_90d' => null,
        'email_change_count_28d' => null,
        'email_change_count_90d' => null,
        'address_change_count_28d' => null,
        'address_change_count_90d' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'unauthorized_transactions_count_7d' => 'unauthorized_transactions_count_7d',
        'unauthorized_transactions_count_30d' => 'unauthorized_transactions_count_30d',
        'unauthorized_transactions_count_60d' => 'unauthorized_transactions_count_60d',
        'unauthorized_transactions_count_90d' => 'unauthorized_transactions_count_90d',
        'nsf_overdraft_transactions_count_7d' => 'nsf_overdraft_transactions_count_7d',
        'nsf_overdraft_transactions_count_30d' => 'nsf_overdraft_transactions_count_30d',
        'nsf_overdraft_transactions_count_60d' => 'nsf_overdraft_transactions_count_60d',
        'nsf_overdraft_transactions_count_90d' => 'nsf_overdraft_transactions_count_90d',
        'days_since_first_plaid_connection' => 'days_since_first_plaid_connection',
        'plaid_connections_count_7d' => 'plaid_connections_count_7d',
        'plaid_connections_count_30d' => 'plaid_connections_count_30d',
        'total_plaid_connections_count' => 'total_plaid_connections_count',
        'is_savings_or_money_market_account' => 'is_savings_or_money_market_account',
        'total_credit_transactions_amount_10d' => 'total_credit_transactions_amount_10d',
        'total_debit_transactions_amount_10d' => 'total_debit_transactions_amount_10d',
        'p50_credit_transactions_amount_28d' => 'p50_credit_transactions_amount_28d',
        'p50_debit_transactions_amount_28d' => 'p50_debit_transactions_amount_28d',
        'p95_credit_transactions_amount_28d' => 'p95_credit_transactions_amount_28d',
        'p95_debit_transactions_amount_28d' => 'p95_debit_transactions_amount_28d',
        'days_with_negative_balance_count_90d' => 'days_with_negative_balance_count_90d',
        'p90_eod_balance_30d' => 'p90_eod_balance_30d',
        'p90_eod_balance_60d' => 'p90_eod_balance_60d',
        'p90_eod_balance_90d' => 'p90_eod_balance_90d',
        'p10_eod_balance_30d' => 'p10_eod_balance_30d',
        'p10_eod_balance_60d' => 'p10_eod_balance_60d',
        'p10_eod_balance_90d' => 'p10_eod_balance_90d',
        'available_balance' => 'available_balance',
        'current_balance' => 'current_balance',
        'balance_last_updated' => 'balance_last_updated',
        'phone_change_count_28d' => 'phone_change_count_28d',
        'phone_change_count_90d' => 'phone_change_count_90d',
        'email_change_count_28d' => 'email_change_count_28d',
        'email_change_count_90d' => 'email_change_count_90d',
        'address_change_count_28d' => 'address_change_count_28d',
        'address_change_count_90d' => 'address_change_count_90d'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'unauthorized_transactions_count_7d' => 'setUnauthorizedTransactionsCount7d',
        'unauthorized_transactions_count_30d' => 'setUnauthorizedTransactionsCount30d',
        'unauthorized_transactions_count_60d' => 'setUnauthorizedTransactionsCount60d',
        'unauthorized_transactions_count_90d' => 'setUnauthorizedTransactionsCount90d',
        'nsf_overdraft_transactions_count_7d' => 'setNsfOverdraftTransactionsCount7d',
        'nsf_overdraft_transactions_count_30d' => 'setNsfOverdraftTransactionsCount30d',
        'nsf_overdraft_transactions_count_60d' => 'setNsfOverdraftTransactionsCount60d',
        'nsf_overdraft_transactions_count_90d' => 'setNsfOverdraftTransactionsCount90d',
        'days_since_first_plaid_connection' => 'setDaysSinceFirstPlaidConnection',
        'plaid_connections_count_7d' => 'setPlaidConnectionsCount7d',
        'plaid_connections_count_30d' => 'setPlaidConnectionsCount30d',
        'total_plaid_connections_count' => 'setTotalPlaidConnectionsCount',
        'is_savings_or_money_market_account' => 'setIsSavingsOrMoneyMarketAccount',
        'total_credit_transactions_amount_10d' => 'setTotalCreditTransactionsAmount10d',
        'total_debit_transactions_amount_10d' => 'setTotalDebitTransactionsAmount10d',
        'p50_credit_transactions_amount_28d' => 'setP50CreditTransactionsAmount28d',
        'p50_debit_transactions_amount_28d' => 'setP50DebitTransactionsAmount28d',
        'p95_credit_transactions_amount_28d' => 'setP95CreditTransactionsAmount28d',
        'p95_debit_transactions_amount_28d' => 'setP95DebitTransactionsAmount28d',
        'days_with_negative_balance_count_90d' => 'setDaysWithNegativeBalanceCount90d',
        'p90_eod_balance_30d' => 'setP90EodBalance30d',
        'p90_eod_balance_60d' => 'setP90EodBalance60d',
        'p90_eod_balance_90d' => 'setP90EodBalance90d',
        'p10_eod_balance_30d' => 'setP10EodBalance30d',
        'p10_eod_balance_60d' => 'setP10EodBalance60d',
        'p10_eod_balance_90d' => 'setP10EodBalance90d',
        'available_balance' => 'setAvailableBalance',
        'current_balance' => 'setCurrentBalance',
        'balance_last_updated' => 'setBalanceLastUpdated',
        'phone_change_count_28d' => 'setPhoneChangeCount28d',
        'phone_change_count_90d' => 'setPhoneChangeCount90d',
        'email_change_count_28d' => 'setEmailChangeCount28d',
        'email_change_count_90d' => 'setEmailChangeCount90d',
        'address_change_count_28d' => 'setAddressChangeCount28d',
        'address_change_count_90d' => 'setAddressChangeCount90d'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'unauthorized_transactions_count_7d' => 'getUnauthorizedTransactionsCount7d',
        'unauthorized_transactions_count_30d' => 'getUnauthorizedTransactionsCount30d',
        'unauthorized_transactions_count_60d' => 'getUnauthorizedTransactionsCount60d',
        'unauthorized_transactions_count_90d' => 'getUnauthorizedTransactionsCount90d',
        'nsf_overdraft_transactions_count_7d' => 'getNsfOverdraftTransactionsCount7d',
        'nsf_overdraft_transactions_count_30d' => 'getNsfOverdraftTransactionsCount30d',
        'nsf_overdraft_transactions_count_60d' => 'getNsfOverdraftTransactionsCount60d',
        'nsf_overdraft_transactions_count_90d' => 'getNsfOverdraftTransactionsCount90d',
        'days_since_first_plaid_connection' => 'getDaysSinceFirstPlaidConnection',
        'plaid_connections_count_7d' => 'getPlaidConnectionsCount7d',
        'plaid_connections_count_30d' => 'getPlaidConnectionsCount30d',
        'total_plaid_connections_count' => 'getTotalPlaidConnectionsCount',
        'is_savings_or_money_market_account' => 'getIsSavingsOrMoneyMarketAccount',
        'total_credit_transactions_amount_10d' => 'getTotalCreditTransactionsAmount10d',
        'total_debit_transactions_amount_10d' => 'getTotalDebitTransactionsAmount10d',
        'p50_credit_transactions_amount_28d' => 'getP50CreditTransactionsAmount28d',
        'p50_debit_transactions_amount_28d' => 'getP50DebitTransactionsAmount28d',
        'p95_credit_transactions_amount_28d' => 'getP95CreditTransactionsAmount28d',
        'p95_debit_transactions_amount_28d' => 'getP95DebitTransactionsAmount28d',
        'days_with_negative_balance_count_90d' => 'getDaysWithNegativeBalanceCount90d',
        'p90_eod_balance_30d' => 'getP90EodBalance30d',
        'p90_eod_balance_60d' => 'getP90EodBalance60d',
        'p90_eod_balance_90d' => 'getP90EodBalance90d',
        'p10_eod_balance_30d' => 'getP10EodBalance30d',
        'p10_eod_balance_60d' => 'getP10EodBalance60d',
        'p10_eod_balance_90d' => 'getP10EodBalance90d',
        'available_balance' => 'getAvailableBalance',
        'current_balance' => 'getCurrentBalance',
        'balance_last_updated' => 'getBalanceLastUpdated',
        'phone_change_count_28d' => 'getPhoneChangeCount28d',
        'phone_change_count_90d' => 'getPhoneChangeCount90d',
        'email_change_count_28d' => 'getEmailChangeCount28d',
        'email_change_count_90d' => 'getEmailChangeCount90d',
        'address_change_count_28d' => 'getAddressChangeCount28d',
        'address_change_count_90d' => 'getAddressChangeCount90d'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['unauthorized_transactions_count_7d'] = $data['unauthorized_transactions_count_7d'] ?? null;
        $this->container['unauthorized_transactions_count_30d'] = $data['unauthorized_transactions_count_30d'] ?? null;
        $this->container['unauthorized_transactions_count_60d'] = $data['unauthorized_transactions_count_60d'] ?? null;
        $this->container['unauthorized_transactions_count_90d'] = $data['unauthorized_transactions_count_90d'] ?? null;
        $this->container['nsf_overdraft_transactions_count_7d'] = $data['nsf_overdraft_transactions_count_7d'] ?? null;
        $this->container['nsf_overdraft_transactions_count_30d'] = $data['nsf_overdraft_transactions_count_30d'] ?? null;
        $this->container['nsf_overdraft_transactions_count_60d'] = $data['nsf_overdraft_transactions_count_60d'] ?? null;
        $this->container['nsf_overdraft_transactions_count_90d'] = $data['nsf_overdraft_transactions_count_90d'] ?? null;
        $this->container['days_since_first_plaid_connection'] = $data['days_since_first_plaid_connection'] ?? null;
        $this->container['plaid_connections_count_7d'] = $data['plaid_connections_count_7d'] ?? null;
        $this->container['plaid_connections_count_30d'] = $data['plaid_connections_count_30d'] ?? null;
        $this->container['total_plaid_connections_count'] = $data['total_plaid_connections_count'] ?? null;
        $this->container['is_savings_or_money_market_account'] = $data['is_savings_or_money_market_account'] ?? null;
        $this->container['total_credit_transactions_amount_10d'] = $data['total_credit_transactions_amount_10d'] ?? null;
        $this->container['total_debit_transactions_amount_10d'] = $data['total_debit_transactions_amount_10d'] ?? null;
        $this->container['p50_credit_transactions_amount_28d'] = $data['p50_credit_transactions_amount_28d'] ?? null;
        $this->container['p50_debit_transactions_amount_28d'] = $data['p50_debit_transactions_amount_28d'] ?? null;
        $this->container['p95_credit_transactions_amount_28d'] = $data['p95_credit_transactions_amount_28d'] ?? null;
        $this->container['p95_debit_transactions_amount_28d'] = $data['p95_debit_transactions_amount_28d'] ?? null;
        $this->container['days_with_negative_balance_count_90d'] = $data['days_with_negative_balance_count_90d'] ?? null;
        $this->container['p90_eod_balance_30d'] = $data['p90_eod_balance_30d'] ?? null;
        $this->container['p90_eod_balance_60d'] = $data['p90_eod_balance_60d'] ?? null;
        $this->container['p90_eod_balance_90d'] = $data['p90_eod_balance_90d'] ?? null;
        $this->container['p10_eod_balance_30d'] = $data['p10_eod_balance_30d'] ?? null;
        $this->container['p10_eod_balance_60d'] = $data['p10_eod_balance_60d'] ?? null;
        $this->container['p10_eod_balance_90d'] = $data['p10_eod_balance_90d'] ?? null;
        $this->container['available_balance'] = $data['available_balance'] ?? null;
        $this->container['current_balance'] = $data['current_balance'] ?? null;
        $this->container['balance_last_updated'] = $data['balance_last_updated'] ?? null;
        $this->container['phone_change_count_28d'] = $data['phone_change_count_28d'] ?? null;
        $this->container['phone_change_count_90d'] = $data['phone_change_count_90d'] ?? null;
        $this->container['email_change_count_28d'] = $data['email_change_count_28d'] ?? null;
        $this->container['email_change_count_90d'] = $data['email_change_count_90d'] ?? null;
        $this->container['address_change_count_28d'] = $data['address_change_count_28d'] ?? null;
        $this->container['address_change_count_90d'] = $data['address_change_count_90d'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets unauthorized_transactions_count_7d
     *
     * @return int|null
     */
    public function getUnauthorizedTransactionsCount7d()
    {
        return $this->container['unauthorized_transactions_count_7d'];
    }

    /**
     * Sets unauthorized_transactions_count_7d
     *
     * @param int|null $unauthorized_transactions_count_7d We parse and analyze historical transaction metadata to identify the number of possible past returns due to unauthorized transactions over the past 7 days from the account that will be debited.
     *
     * @return self
     */
    public function setUnauthorizedTransactionsCount7d($unauthorized_transactions_count_7d)
    {
        $this->container['unauthorized_transactions_count_7d'] = $unauthorized_transactions_count_7d;

        return $this;
    }

    /**
     * Gets unauthorized_transactions_count_30d
     *
     * @return int|null
     */
    public function getUnauthorizedTransactionsCount30d()
    {
        return $this->container['unauthorized_transactions_count_30d'];
    }

    /**
     * Sets unauthorized_transactions_count_30d
     *
     * @param int|null $unauthorized_transactions_count_30d We parse and analyze historical transaction metadata to identify the number of possible past returns due to unauthorized transactions over the past 30 days from the account that will be debited.
     *
     * @return self
     */
    public function setUnauthorizedTransactionsCount30d($unauthorized_transactions_count_30d)
    {
        $this->container['unauthorized_transactions_count_30d'] = $unauthorized_transactions_count_30d;

        return $this;
    }

    /**
     * Gets unauthorized_transactions_count_60d
     *
     * @return int|null
     */
    public function getUnauthorizedTransactionsCount60d()
    {
        return $this->container['unauthorized_transactions_count_60d'];
    }

    /**
     * Sets unauthorized_transactions_count_60d
     *
     * @param int|null $unauthorized_transactions_count_60d We parse and analyze historical transaction metadata to identify the number of possible past returns due to unauthorized transactions over the past 60 days from the account that will be debited.
     *
     * @return self
     */
    public function setUnauthorizedTransactionsCount60d($unauthorized_transactions_count_60d)
    {
        $this->container['unauthorized_transactions_count_60d'] = $unauthorized_transactions_count_60d;

        return $this;
    }

    /**
     * Gets unauthorized_transactions_count_90d
     *
     * @return int|null
     */
    public function getUnauthorizedTransactionsCount90d()
    {
        return $this->container['unauthorized_transactions_count_90d'];
    }

    /**
     * Sets unauthorized_transactions_count_90d
     *
     * @param int|null $unauthorized_transactions_count_90d We parse and analyze historical transaction metadata to identify the number of possible past returns due to unauthorized transactions over the past 90 days from the account that will be debited.
     *
     * @return self
     */
    public function setUnauthorizedTransactionsCount90d($unauthorized_transactions_count_90d)
    {
        $this->container['unauthorized_transactions_count_90d'] = $unauthorized_transactions_count_90d;

        return $this;
    }

    /**
     * Gets nsf_overdraft_transactions_count_7d
     *
     * @return int|null
     */
    public function getNsfOverdraftTransactionsCount7d()
    {
        return $this->container['nsf_overdraft_transactions_count_7d'];
    }

    /**
     * Sets nsf_overdraft_transactions_count_7d
     *
     * @param int|null $nsf_overdraft_transactions_count_7d We parse and analyze historical transaction metadata to identify the number of possible past returns due to non-sufficient funds/overdrafts over the past 7 days from the account that will be debited.
     *
     * @return self
     */
    public function setNsfOverdraftTransactionsCount7d($nsf_overdraft_transactions_count_7d)
    {
        $this->container['nsf_overdraft_transactions_count_7d'] = $nsf_overdraft_transactions_count_7d;

        return $this;
    }

    /**
     * Gets nsf_overdraft_transactions_count_30d
     *
     * @return int|null
     */
    public function getNsfOverdraftTransactionsCount30d()
    {
        return $this->container['nsf_overdraft_transactions_count_30d'];
    }

    /**
     * Sets nsf_overdraft_transactions_count_30d
     *
     * @param int|null $nsf_overdraft_transactions_count_30d We parse and analyze historical transaction metadata to identify the number of possible past returns due to non-sufficient funds/overdrafts over the past 30 days from the account that will be debited.
     *
     * @return self
     */
    public function setNsfOverdraftTransactionsCount30d($nsf_overdraft_transactions_count_30d)
    {
        $this->container['nsf_overdraft_transactions_count_30d'] = $nsf_overdraft_transactions_count_30d;

        return $this;
    }

    /**
     * Gets nsf_overdraft_transactions_count_60d
     *
     * @return int|null
     */
    public function getNsfOverdraftTransactionsCount60d()
    {
        return $this->container['nsf_overdraft_transactions_count_60d'];
    }

    /**
     * Sets nsf_overdraft_transactions_count_60d
     *
     * @param int|null $nsf_overdraft_transactions_count_60d We parse and analyze historical transaction metadata to identify the number of possible past returns due to non-sufficient funds/overdrafts over the past 60 days from the account that will be debited.
     *
     * @return self
     */
    public function setNsfOverdraftTransactionsCount60d($nsf_overdraft_transactions_count_60d)
    {
        $this->container['nsf_overdraft_transactions_count_60d'] = $nsf_overdraft_transactions_count_60d;

        return $this;
    }

    /**
     * Gets nsf_overdraft_transactions_count_90d
     *
     * @return int|null
     */
    public function getNsfOverdraftTransactionsCount90d()
    {
        return $this->container['nsf_overdraft_transactions_count_90d'];
    }

    /**
     * Sets nsf_overdraft_transactions_count_90d
     *
     * @param int|null $nsf_overdraft_transactions_count_90d We parse and analyze historical transaction metadata to identify the number of possible past returns due to non-sufficient funds/overdrafts over the past 90 days from the account that will be debited.
     *
     * @return self
     */
    public function setNsfOverdraftTransactionsCount90d($nsf_overdraft_transactions_count_90d)
    {
        $this->container['nsf_overdraft_transactions_count_90d'] = $nsf_overdraft_transactions_count_90d;

        return $this;
    }

    /**
     * Gets days_since_first_plaid_connection
     *
     * @return int|null
     */
    public function getDaysSinceFirstPlaidConnection()
    {
        return $this->container['days_since_first_plaid_connection'];
    }

    /**
     * Sets days_since_first_plaid_connection
     *
     * @param int|null $days_since_first_plaid_connection The number of days since the first time the Item was connected to an application via Plaid
     *
     * @return self
     */
    public function setDaysSinceFirstPlaidConnection($days_since_first_plaid_connection)
    {
        $this->container['days_since_first_plaid_connection'] = $days_since_first_plaid_connection;

        return $this;
    }

    /**
     * Gets plaid_connections_count_7d
     *
     * @return int|null
     */
    public function getPlaidConnectionsCount7d()
    {
        return $this->container['plaid_connections_count_7d'];
    }

    /**
     * Sets plaid_connections_count_7d
     *
     * @param int|null $plaid_connections_count_7d The number of times the Item has been connected to applications via Plaid over the past 7 days
     *
     * @return self
     */
    public function setPlaidConnectionsCount7d($plaid_connections_count_7d)
    {
        $this->container['plaid_connections_count_7d'] = $plaid_connections_count_7d;

        return $this;
    }

    /**
     * Gets plaid_connections_count_30d
     *
     * @return int|null
     */
    public function getPlaidConnectionsCount30d()
    {
        return $this->container['plaid_connections_count_30d'];
    }

    /**
     * Sets plaid_connections_count_30d
     *
     * @param int|null $plaid_connections_count_30d The number of times the Item has been connected to applications via Plaid over the past 30 days
     *
     * @return self
     */
    public function setPlaidConnectionsCount30d($plaid_connections_count_30d)
    {
        $this->container['plaid_connections_count_30d'] = $plaid_connections_count_30d;

        return $this;
    }

    /**
     * Gets total_plaid_connections_count
     *
     * @return int|null
     */
    public function getTotalPlaidConnectionsCount()
    {
        return $this->container['total_plaid_connections_count'];
    }

    /**
     * Sets total_plaid_connections_count
     *
     * @param int|null $total_plaid_connections_count The total number of times the Item has been connected to applications via Plaid
     *
     * @return self
     */
    public function setTotalPlaidConnectionsCount($total_plaid_connections_count)
    {
        $this->container['total_plaid_connections_count'] = $total_plaid_connections_count;

        return $this;
    }

    /**
     * Gets is_savings_or_money_market_account
     *
     * @return bool|null
     */
    public function getIsSavingsOrMoneyMarketAccount()
    {
        return $this->container['is_savings_or_money_market_account'];
    }

    /**
     * Sets is_savings_or_money_market_account
     *
     * @param bool|null $is_savings_or_money_market_account Indicates if the ACH transaction funding account is a savings/money market account
     *
     * @return self
     */
    public function setIsSavingsOrMoneyMarketAccount($is_savings_or_money_market_account)
    {
        $this->container['is_savings_or_money_market_account'] = $is_savings_or_money_market_account;

        return $this;
    }

    /**
     * Gets total_credit_transactions_amount_10d
     *
     * @return float|null
     */
    public function getTotalCreditTransactionsAmount10d()
    {
        return $this->container['total_credit_transactions_amount_10d'];
    }

    /**
     * Sets total_credit_transactions_amount_10d
     *
     * @param float|null $total_credit_transactions_amount_10d The total credit (inflow) transaction amount over the past 10 days from the account that will be debited
     *
     * @return self
     */
    public function setTotalCreditTransactionsAmount10d($total_credit_transactions_amount_10d)
    {
        $this->container['total_credit_transactions_amount_10d'] = $total_credit_transactions_amount_10d;

        return $this;
    }

    /**
     * Gets total_debit_transactions_amount_10d
     *
     * @return float|null
     */
    public function getTotalDebitTransactionsAmount10d()
    {
        return $this->container['total_debit_transactions_amount_10d'];
    }

    /**
     * Sets total_debit_transactions_amount_10d
     *
     * @param float|null $total_debit_transactions_amount_10d The total debit (outflow) transaction amount over the past 10 days from the account that will be debited
     *
     * @return self
     */
    public function setTotalDebitTransactionsAmount10d($total_debit_transactions_amount_10d)
    {
        $this->container['total_debit_transactions_amount_10d'] = $total_debit_transactions_amount_10d;

        return $this;
    }

    /**
     * Gets p50_credit_transactions_amount_28d
     *
     * @return float|null
     */
    public function getP50CreditTransactionsAmount28d()
    {
        return $this->container['p50_credit_transactions_amount_28d'];
    }

    /**
     * Sets p50_credit_transactions_amount_28d
     *
     * @param float|null $p50_credit_transactions_amount_28d The 50th percentile of all credit (inflow) transaction amounts over the past 28 days from the account that will be debited
     *
     * @return self
     */
    public function setP50CreditTransactionsAmount28d($p50_credit_transactions_amount_28d)
    {
        $this->container['p50_credit_transactions_amount_28d'] = $p50_credit_transactions_amount_28d;

        return $this;
    }

    /**
     * Gets p50_debit_transactions_amount_28d
     *
     * @return float|null
     */
    public function getP50DebitTransactionsAmount28d()
    {
        return $this->container['p50_debit_transactions_amount_28d'];
    }

    /**
     * Sets p50_debit_transactions_amount_28d
     *
     * @param float|null $p50_debit_transactions_amount_28d The 50th percentile of all debit (outflow) transaction amounts over the past 28 days from the account that will be debited
     *
     * @return self
     */
    public function setP50DebitTransactionsAmount28d($p50_debit_transactions_amount_28d)
    {
        $this->container['p50_debit_transactions_amount_28d'] = $p50_debit_transactions_amount_28d;

        return $this;
    }

    /**
     * Gets p95_credit_transactions_amount_28d
     *
     * @return float|null
     */
    public function getP95CreditTransactionsAmount28d()
    {
        return $this->container['p95_credit_transactions_amount_28d'];
    }

    /**
     * Sets p95_credit_transactions_amount_28d
     *
     * @param float|null $p95_credit_transactions_amount_28d The 95th percentile of all credit (inflow) transaction amounts over the past 28 days from the account that will be debited
     *
     * @return self
     */
    public function setP95CreditTransactionsAmount28d($p95_credit_transactions_amount_28d)
    {
        $this->container['p95_credit_transactions_amount_28d'] = $p95_credit_transactions_amount_28d;

        return $this;
    }

    /**
     * Gets p95_debit_transactions_amount_28d
     *
     * @return float|null
     */
    public function getP95DebitTransactionsAmount28d()
    {
        return $this->container['p95_debit_transactions_amount_28d'];
    }

    /**
     * Sets p95_debit_transactions_amount_28d
     *
     * @param float|null $p95_debit_transactions_amount_28d The 95th percentile of all debit (outflow) transaction amounts over the past 28 days from the account that will be debited
     *
     * @return self
     */
    public function setP95DebitTransactionsAmount28d($p95_debit_transactions_amount_28d)
    {
        $this->container['p95_debit_transactions_amount_28d'] = $p95_debit_transactions_amount_28d;

        return $this;
    }

    /**
     * Gets days_with_negative_balance_count_90d
     *
     * @return int|null
     */
    public function getDaysWithNegativeBalanceCount90d()
    {
        return $this->container['days_with_negative_balance_count_90d'];
    }

    /**
     * Sets days_with_negative_balance_count_90d
     *
     * @param int|null $days_with_negative_balance_count_90d The number of days within the past 90 days when the account that will be debited had a negative end-of-day available balance
     *
     * @return self
     */
    public function setDaysWithNegativeBalanceCount90d($days_with_negative_balance_count_90d)
    {
        $this->container['days_with_negative_balance_count_90d'] = $days_with_negative_balance_count_90d;

        return $this;
    }

    /**
     * Gets p90_eod_balance_30d
     *
     * @return float|null
     */
    public function getP90EodBalance30d()
    {
        return $this->container['p90_eod_balance_30d'];
    }

    /**
     * Sets p90_eod_balance_30d
     *
     * @param float|null $p90_eod_balance_30d The 90th percentile of the end-of-day available balance over the past 30 days of the account that will be debited
     *
     * @return self
     */
    public function setP90EodBalance30d($p90_eod_balance_30d)
    {
        $this->container['p90_eod_balance_30d'] = $p90_eod_balance_30d;

        return $this;
    }

    /**
     * Gets p90_eod_balance_60d
     *
     * @return float|null
     */
    public function getP90EodBalance60d()
    {
        return $this->container['p90_eod_balance_60d'];
    }

    /**
     * Sets p90_eod_balance_60d
     *
     * @param float|null $p90_eod_balance_60d The 90th percentile of the end-of-day available balance over the past 60 days of the account that will be debited
     *
     * @return self
     */
    public function setP90EodBalance60d($p90_eod_balance_60d)
    {
        $this->container['p90_eod_balance_60d'] = $p90_eod_balance_60d;

        return $this;
    }

    /**
     * Gets p90_eod_balance_90d
     *
     * @return float|null
     */
    public function getP90EodBalance90d()
    {
        return $this->container['p90_eod_balance_90d'];
    }

    /**
     * Sets p90_eod_balance_90d
     *
     * @param float|null $p90_eod_balance_90d The 90th percentile of the end-of-day available balance over the past 90 days of the account that will be debited
     *
     * @return self
     */
    public function setP90EodBalance90d($p90_eod_balance_90d)
    {
        $this->container['p90_eod_balance_90d'] = $p90_eod_balance_90d;

        return $this;
    }

    /**
     * Gets p10_eod_balance_30d
     *
     * @return float|null
     */
    public function getP10EodBalance30d()
    {
        return $this->container['p10_eod_balance_30d'];
    }

    /**
     * Sets p10_eod_balance_30d
     *
     * @param float|null $p10_eod_balance_30d The 10th percentile of the end-of-day available balance over the past 30 days of the account that will be debited
     *
     * @return self
     */
    public function setP10EodBalance30d($p10_eod_balance_30d)
    {
        $this->container['p10_eod_balance_30d'] = $p10_eod_balance_30d;

        return $this;
    }

    /**
     * Gets p10_eod_balance_60d
     *
     * @return float|null
     */
    public function getP10EodBalance60d()
    {
        return $this->container['p10_eod_balance_60d'];
    }

    /**
     * Sets p10_eod_balance_60d
     *
     * @param float|null $p10_eod_balance_60d The 10th percentile of the end-of-day available balance over the past 60 days of the account that will be debited
     *
     * @return self
     */
    public function setP10EodBalance60d($p10_eod_balance_60d)
    {
        $this->container['p10_eod_balance_60d'] = $p10_eod_balance_60d;

        return $this;
    }

    /**
     * Gets p10_eod_balance_90d
     *
     * @return float|null
     */
    public function getP10EodBalance90d()
    {
        return $this->container['p10_eod_balance_90d'];
    }

    /**
     * Sets p10_eod_balance_90d
     *
     * @param float|null $p10_eod_balance_90d The 10th percentile of the end-of-day available balance over the past 90 days of the account that will be debited
     *
     * @return self
     */
    public function setP10EodBalance90d($p10_eod_balance_90d)
    {
        $this->container['p10_eod_balance_90d'] = $p10_eod_balance_90d;

        return $this;
    }

    /**
     * Gets available_balance
     *
     * @return float|null
     */
    public function getAvailableBalance()
    {
        return $this->container['available_balance'];
    }

    /**
     * Sets available_balance
     *
     * @param float|null $available_balance Available balance, as of the `balance_last_updated` time. The available balance is the current balance less any outstanding holds or debits that have not yet posted to the account.
     *
     * @return self
     */
    public function setAvailableBalance($available_balance)
    {
        $this->container['available_balance'] = $available_balance;

        return $this;
    }

    /**
     * Gets current_balance
     *
     * @return float|null
     */
    public function getCurrentBalance()
    {
        return $this->container['current_balance'];
    }

    /**
     * Sets current_balance
     *
     * @param float|null $current_balance Current balance, as of the `balance_last_updated` time. The current balance is the total amount of funds in the account.
     *
     * @return self
     */
    public function setCurrentBalance($current_balance)
    {
        $this->container['current_balance'] = $current_balance;

        return $this;
    }

    /**
     * Gets balance_last_updated
     *
     * @return \DateTime|null
     */
    public function getBalanceLastUpdated()
    {
        return $this->container['balance_last_updated'];
    }

    /**
     * Sets balance_last_updated
     *
     * @param \DateTime|null $balance_last_updated Timestamp in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DDTHH:mm:ssZ) indicating the last time that the balance for the given account has been updated.
     *
     * @return self
     */
    public function setBalanceLastUpdated($balance_last_updated)
    {
        $this->container['balance_last_updated'] = $balance_last_updated;

        return $this;
    }

    /**
     * Gets phone_change_count_28d
     *
     * @return int|null
     */
    public function getPhoneChangeCount28d()
    {
        return $this->container['phone_change_count_28d'];
    }

    /**
     * Sets phone_change_count_28d
     *
     * @param int|null $phone_change_count_28d The number of times the account's phone numbers on file have changed over the past 28 days
     *
     * @return self
     */
    public function setPhoneChangeCount28d($phone_change_count_28d)
    {
        $this->container['phone_change_count_28d'] = $phone_change_count_28d;

        return $this;
    }

    /**
     * Gets phone_change_count_90d
     *
     * @return int|null
     */
    public function getPhoneChangeCount90d()
    {
        return $this->container['phone_change_count_90d'];
    }

    /**
     * Sets phone_change_count_90d
     *
     * @param int|null $phone_change_count_90d The number of times the account's phone numbers on file have changed over the past 90 days
     *
     * @return self
     */
    public function setPhoneChangeCount90d($phone_change_count_90d)
    {
        $this->container['phone_change_count_90d'] = $phone_change_count_90d;

        return $this;
    }

    /**
     * Gets email_change_count_28d
     *
     * @return int|null
     */
    public function getEmailChangeCount28d()
    {
        return $this->container['email_change_count_28d'];
    }

    /**
     * Sets email_change_count_28d
     *
     * @param int|null $email_change_count_28d The number of times the account's email addresses on file have changed over the past 28 days
     *
     * @return self
     */
    public function setEmailChangeCount28d($email_change_count_28d)
    {
        $this->container['email_change_count_28d'] = $email_change_count_28d;

        return $this;
    }

    /**
     * Gets email_change_count_90d
     *
     * @return int|null
     */
    public function getEmailChangeCount90d()
    {
        return $this->container['email_change_count_90d'];
    }

    /**
     * Sets email_change_count_90d
     *
     * @param int|null $email_change_count_90d The number of times the account's email addresses on file have changed over the past 90 days
     *
     * @return self
     */
    public function setEmailChangeCount90d($email_change_count_90d)
    {
        $this->container['email_change_count_90d'] = $email_change_count_90d;

        return $this;
    }

    /**
     * Gets address_change_count_28d
     *
     * @return int|null
     */
    public function getAddressChangeCount28d()
    {
        return $this->container['address_change_count_28d'];
    }

    /**
     * Sets address_change_count_28d
     *
     * @param int|null $address_change_count_28d The number of times the account's addresses on file have changed over the past 28 days
     *
     * @return self
     */
    public function setAddressChangeCount28d($address_change_count_28d)
    {
        $this->container['address_change_count_28d'] = $address_change_count_28d;

        return $this;
    }

    /**
     * Gets address_change_count_90d
     *
     * @return int|null
     */
    public function getAddressChangeCount90d()
    {
        return $this->container['address_change_count_90d'];
    }

    /**
     * Sets address_change_count_90d
     *
     * @param int|null $address_change_count_90d The number of times the account's addresses on file have changed over the past 90 days
     *
     * @return self
     */
    public function setAddressChangeCount90d($address_change_count_90d)
    {
        $this->container['address_change_count_90d'] = $address_change_count_90d;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


