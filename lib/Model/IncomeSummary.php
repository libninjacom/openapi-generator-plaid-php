<?php
/**
 * IncomeSummary
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.64.13
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * IncomeSummary Class Doc Comment
 *
 * @category Class
 * @description The verified fields from a paystub verification. All fields are provided as reported on the paystub.
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class IncomeSummary implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'IncomeSummary';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'employer_name' => '\OpenAPI\Client\Model\EmployerIncomeSummaryFieldString',
        'employee_name' => '\OpenAPI\Client\Model\EmployeeIncomeSummaryFieldString',
        'ytd_gross_income' => '\OpenAPI\Client\Model\YTDGrossIncomeSummaryFieldNumber',
        'ytd_net_income' => '\OpenAPI\Client\Model\YTDNetIncomeSummaryFieldNumber',
        'pay_frequency' => '\OpenAPI\Client\Model\PayFrequency',
        'projected_wage' => '\OpenAPI\Client\Model\ProjectedIncomeSummaryFieldNumber',
        'verified_transaction' => '\OpenAPI\Client\Model\TransactionData'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'employer_name' => null,
        'employee_name' => null,
        'ytd_gross_income' => null,
        'ytd_net_income' => null,
        'pay_frequency' => null,
        'projected_wage' => null,
        'verified_transaction' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'employer_name' => 'employer_name',
        'employee_name' => 'employee_name',
        'ytd_gross_income' => 'ytd_gross_income',
        'ytd_net_income' => 'ytd_net_income',
        'pay_frequency' => 'pay_frequency',
        'projected_wage' => 'projected_wage',
        'verified_transaction' => 'verified_transaction'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'employer_name' => 'setEmployerName',
        'employee_name' => 'setEmployeeName',
        'ytd_gross_income' => 'setYtdGrossIncome',
        'ytd_net_income' => 'setYtdNetIncome',
        'pay_frequency' => 'setPayFrequency',
        'projected_wage' => 'setProjectedWage',
        'verified_transaction' => 'setVerifiedTransaction'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'employer_name' => 'getEmployerName',
        'employee_name' => 'getEmployeeName',
        'ytd_gross_income' => 'getYtdGrossIncome',
        'ytd_net_income' => 'getYtdNetIncome',
        'pay_frequency' => 'getPayFrequency',
        'projected_wage' => 'getProjectedWage',
        'verified_transaction' => 'getVerifiedTransaction'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['employer_name'] = $data['employer_name'] ?? null;
        $this->container['employee_name'] = $data['employee_name'] ?? null;
        $this->container['ytd_gross_income'] = $data['ytd_gross_income'] ?? null;
        $this->container['ytd_net_income'] = $data['ytd_net_income'] ?? null;
        $this->container['pay_frequency'] = $data['pay_frequency'] ?? null;
        $this->container['projected_wage'] = $data['projected_wage'] ?? null;
        $this->container['verified_transaction'] = $data['verified_transaction'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['employer_name'] === null) {
            $invalidProperties[] = "'employer_name' can't be null";
        }
        if ($this->container['employee_name'] === null) {
            $invalidProperties[] = "'employee_name' can't be null";
        }
        if ($this->container['ytd_gross_income'] === null) {
            $invalidProperties[] = "'ytd_gross_income' can't be null";
        }
        if ($this->container['ytd_net_income'] === null) {
            $invalidProperties[] = "'ytd_net_income' can't be null";
        }
        if ($this->container['pay_frequency'] === null) {
            $invalidProperties[] = "'pay_frequency' can't be null";
        }
        if ($this->container['projected_wage'] === null) {
            $invalidProperties[] = "'projected_wage' can't be null";
        }
        if ($this->container['verified_transaction'] === null) {
            $invalidProperties[] = "'verified_transaction' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets employer_name
     *
     * @return \OpenAPI\Client\Model\EmployerIncomeSummaryFieldString
     */
    public function getEmployerName()
    {
        return $this->container['employer_name'];
    }

    /**
     * Sets employer_name
     *
     * @param \OpenAPI\Client\Model\EmployerIncomeSummaryFieldString $employer_name employer_name
     *
     * @return self
     */
    public function setEmployerName($employer_name)
    {
        $this->container['employer_name'] = $employer_name;

        return $this;
    }

    /**
     * Gets employee_name
     *
     * @return \OpenAPI\Client\Model\EmployeeIncomeSummaryFieldString
     */
    public function getEmployeeName()
    {
        return $this->container['employee_name'];
    }

    /**
     * Sets employee_name
     *
     * @param \OpenAPI\Client\Model\EmployeeIncomeSummaryFieldString $employee_name employee_name
     *
     * @return self
     */
    public function setEmployeeName($employee_name)
    {
        $this->container['employee_name'] = $employee_name;

        return $this;
    }

    /**
     * Gets ytd_gross_income
     *
     * @return \OpenAPI\Client\Model\YTDGrossIncomeSummaryFieldNumber
     */
    public function getYtdGrossIncome()
    {
        return $this->container['ytd_gross_income'];
    }

    /**
     * Sets ytd_gross_income
     *
     * @param \OpenAPI\Client\Model\YTDGrossIncomeSummaryFieldNumber $ytd_gross_income ytd_gross_income
     *
     * @return self
     */
    public function setYtdGrossIncome($ytd_gross_income)
    {
        $this->container['ytd_gross_income'] = $ytd_gross_income;

        return $this;
    }

    /**
     * Gets ytd_net_income
     *
     * @return \OpenAPI\Client\Model\YTDNetIncomeSummaryFieldNumber
     */
    public function getYtdNetIncome()
    {
        return $this->container['ytd_net_income'];
    }

    /**
     * Sets ytd_net_income
     *
     * @param \OpenAPI\Client\Model\YTDNetIncomeSummaryFieldNumber $ytd_net_income ytd_net_income
     *
     * @return self
     */
    public function setYtdNetIncome($ytd_net_income)
    {
        $this->container['ytd_net_income'] = $ytd_net_income;

        return $this;
    }

    /**
     * Gets pay_frequency
     *
     * @return \OpenAPI\Client\Model\PayFrequency
     */
    public function getPayFrequency()
    {
        return $this->container['pay_frequency'];
    }

    /**
     * Sets pay_frequency
     *
     * @param \OpenAPI\Client\Model\PayFrequency $pay_frequency pay_frequency
     *
     * @return self
     */
    public function setPayFrequency($pay_frequency)
    {
        $this->container['pay_frequency'] = $pay_frequency;

        return $this;
    }

    /**
     * Gets projected_wage
     *
     * @return \OpenAPI\Client\Model\ProjectedIncomeSummaryFieldNumber
     */
    public function getProjectedWage()
    {
        return $this->container['projected_wage'];
    }

    /**
     * Sets projected_wage
     *
     * @param \OpenAPI\Client\Model\ProjectedIncomeSummaryFieldNumber $projected_wage projected_wage
     *
     * @return self
     */
    public function setProjectedWage($projected_wage)
    {
        $this->container['projected_wage'] = $projected_wage;

        return $this;
    }

    /**
     * Gets verified_transaction
     *
     * @return \OpenAPI\Client\Model\TransactionData
     */
    public function getVerifiedTransaction()
    {
        return $this->container['verified_transaction'];
    }

    /**
     * Sets verified_transaction
     *
     * @param \OpenAPI\Client\Model\TransactionData $verified_transaction verified_transaction
     *
     * @return self
     */
    public function setVerifiedTransaction($verified_transaction)
    {
        $this->container['verified_transaction'] = $verified_transaction;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


