<?php
/**
 * PaymentInitiationPayment
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.64.13
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * PaymentInitiationPayment Class Doc Comment
 *
 * @category Class
 * @description PaymentInitiationPayment defines a payment initiation payment
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class PaymentInitiationPayment implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'PaymentInitiationPayment';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'payment_id' => 'string',
        'amount' => '\OpenAPI\Client\Model\PaymentAmount',
        'status' => '\OpenAPI\Client\Model\PaymentInitiationPaymentStatus',
        'recipient_id' => 'string',
        'reference' => 'string',
        'adjusted_reference' => 'string',
        'last_status_update' => '\DateTime',
        'schedule' => '\OpenAPI\Client\Model\ExternalPaymentScheduleGet',
        'refund_details' => '\OpenAPI\Client\Model\ExternalPaymentRefundDetails',
        'bacs' => '\OpenAPI\Client\Model\SenderBACSNullable',
        'iban' => 'string',
        'initiated_refunds' => '\OpenAPI\Client\Model\PaymentInitiationRefund[]',
        'wallet_id' => 'string',
        'scheme' => '\OpenAPI\Client\Model\PaymentScheme',
        'adjusted_scheme' => '\OpenAPI\Client\Model\PaymentScheme'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'payment_id' => null,
        'amount' => null,
        'status' => null,
        'recipient_id' => null,
        'reference' => null,
        'adjusted_reference' => null,
        'last_status_update' => 'date-time',
        'schedule' => null,
        'refund_details' => null,
        'bacs' => null,
        'iban' => null,
        'initiated_refunds' => null,
        'wallet_id' => null,
        'scheme' => null,
        'adjusted_scheme' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'payment_id' => 'payment_id',
        'amount' => 'amount',
        'status' => 'status',
        'recipient_id' => 'recipient_id',
        'reference' => 'reference',
        'adjusted_reference' => 'adjusted_reference',
        'last_status_update' => 'last_status_update',
        'schedule' => 'schedule',
        'refund_details' => 'refund_details',
        'bacs' => 'bacs',
        'iban' => 'iban',
        'initiated_refunds' => 'initiated_refunds',
        'wallet_id' => 'wallet_id',
        'scheme' => 'scheme',
        'adjusted_scheme' => 'adjusted_scheme'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'payment_id' => 'setPaymentId',
        'amount' => 'setAmount',
        'status' => 'setStatus',
        'recipient_id' => 'setRecipientId',
        'reference' => 'setReference',
        'adjusted_reference' => 'setAdjustedReference',
        'last_status_update' => 'setLastStatusUpdate',
        'schedule' => 'setSchedule',
        'refund_details' => 'setRefundDetails',
        'bacs' => 'setBacs',
        'iban' => 'setIban',
        'initiated_refunds' => 'setInitiatedRefunds',
        'wallet_id' => 'setWalletId',
        'scheme' => 'setScheme',
        'adjusted_scheme' => 'setAdjustedScheme'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'payment_id' => 'getPaymentId',
        'amount' => 'getAmount',
        'status' => 'getStatus',
        'recipient_id' => 'getRecipientId',
        'reference' => 'getReference',
        'adjusted_reference' => 'getAdjustedReference',
        'last_status_update' => 'getLastStatusUpdate',
        'schedule' => 'getSchedule',
        'refund_details' => 'getRefundDetails',
        'bacs' => 'getBacs',
        'iban' => 'getIban',
        'initiated_refunds' => 'getInitiatedRefunds',
        'wallet_id' => 'getWalletId',
        'scheme' => 'getScheme',
        'adjusted_scheme' => 'getAdjustedScheme'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['payment_id'] = $data['payment_id'] ?? null;
        $this->container['amount'] = $data['amount'] ?? null;
        $this->container['status'] = $data['status'] ?? null;
        $this->container['recipient_id'] = $data['recipient_id'] ?? null;
        $this->container['reference'] = $data['reference'] ?? null;
        $this->container['adjusted_reference'] = $data['adjusted_reference'] ?? null;
        $this->container['last_status_update'] = $data['last_status_update'] ?? null;
        $this->container['schedule'] = $data['schedule'] ?? null;
        $this->container['refund_details'] = $data['refund_details'] ?? null;
        $this->container['bacs'] = $data['bacs'] ?? null;
        $this->container['iban'] = $data['iban'] ?? null;
        $this->container['initiated_refunds'] = $data['initiated_refunds'] ?? null;
        $this->container['wallet_id'] = $data['wallet_id'] ?? null;
        $this->container['scheme'] = $data['scheme'] ?? null;
        $this->container['adjusted_scheme'] = $data['adjusted_scheme'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['payment_id'] === null) {
            $invalidProperties[] = "'payment_id' can't be null";
        }
        if ($this->container['amount'] === null) {
            $invalidProperties[] = "'amount' can't be null";
        }
        if ($this->container['status'] === null) {
            $invalidProperties[] = "'status' can't be null";
        }
        if ($this->container['recipient_id'] === null) {
            $invalidProperties[] = "'recipient_id' can't be null";
        }
        if ($this->container['reference'] === null) {
            $invalidProperties[] = "'reference' can't be null";
        }
        if ($this->container['last_status_update'] === null) {
            $invalidProperties[] = "'last_status_update' can't be null";
        }
        if ($this->container['bacs'] === null) {
            $invalidProperties[] = "'bacs' can't be null";
        }
        if ($this->container['iban'] === null) {
            $invalidProperties[] = "'iban' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets payment_id
     *
     * @return string
     */
    public function getPaymentId()
    {
        return $this->container['payment_id'];
    }

    /**
     * Sets payment_id
     *
     * @param string $payment_id The ID of the payment. Like all Plaid identifiers, the `payment_id` is case sensitive.
     *
     * @return self
     */
    public function setPaymentId($payment_id)
    {
        $this->container['payment_id'] = $payment_id;

        return $this;
    }

    /**
     * Gets amount
     *
     * @return \OpenAPI\Client\Model\PaymentAmount
     */
    public function getAmount()
    {
        return $this->container['amount'];
    }

    /**
     * Sets amount
     *
     * @param \OpenAPI\Client\Model\PaymentAmount $amount amount
     *
     * @return self
     */
    public function setAmount($amount)
    {
        $this->container['amount'] = $amount;

        return $this;
    }

    /**
     * Gets status
     *
     * @return \OpenAPI\Client\Model\PaymentInitiationPaymentStatus
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param \OpenAPI\Client\Model\PaymentInitiationPaymentStatus $status status
     *
     * @return self
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets recipient_id
     *
     * @return string
     */
    public function getRecipientId()
    {
        return $this->container['recipient_id'];
    }

    /**
     * Sets recipient_id
     *
     * @param string $recipient_id The ID of the recipient
     *
     * @return self
     */
    public function setRecipientId($recipient_id)
    {
        $this->container['recipient_id'] = $recipient_id;

        return $this;
    }

    /**
     * Gets reference
     *
     * @return string
     */
    public function getReference()
    {
        return $this->container['reference'];
    }

    /**
     * Sets reference
     *
     * @param string $reference A reference for the payment.
     *
     * @return self
     */
    public function setReference($reference)
    {
        $this->container['reference'] = $reference;

        return $this;
    }

    /**
     * Gets adjusted_reference
     *
     * @return string|null
     */
    public function getAdjustedReference()
    {
        return $this->container['adjusted_reference'];
    }

    /**
     * Sets adjusted_reference
     *
     * @param string|null $adjusted_reference The value of the reference sent to the bank after adjustment to pass bank validation rules.
     *
     * @return self
     */
    public function setAdjustedReference($adjusted_reference)
    {
        $this->container['adjusted_reference'] = $adjusted_reference;

        return $this;
    }

    /**
     * Gets last_status_update
     *
     * @return \DateTime
     */
    public function getLastStatusUpdate()
    {
        return $this->container['last_status_update'];
    }

    /**
     * Sets last_status_update
     *
     * @param \DateTime $last_status_update The date and time of the last time the `status` was updated, in IS0 8601 format
     *
     * @return self
     */
    public function setLastStatusUpdate($last_status_update)
    {
        $this->container['last_status_update'] = $last_status_update;

        return $this;
    }

    /**
     * Gets schedule
     *
     * @return \OpenAPI\Client\Model\ExternalPaymentScheduleGet|null
     */
    public function getSchedule()
    {
        return $this->container['schedule'];
    }

    /**
     * Sets schedule
     *
     * @param \OpenAPI\Client\Model\ExternalPaymentScheduleGet|null $schedule schedule
     *
     * @return self
     */
    public function setSchedule($schedule)
    {
        $this->container['schedule'] = $schedule;

        return $this;
    }

    /**
     * Gets refund_details
     *
     * @return \OpenAPI\Client\Model\ExternalPaymentRefundDetails|null
     */
    public function getRefundDetails()
    {
        return $this->container['refund_details'];
    }

    /**
     * Sets refund_details
     *
     * @param \OpenAPI\Client\Model\ExternalPaymentRefundDetails|null $refund_details refund_details
     *
     * @return self
     */
    public function setRefundDetails($refund_details)
    {
        $this->container['refund_details'] = $refund_details;

        return $this;
    }

    /**
     * Gets bacs
     *
     * @return \OpenAPI\Client\Model\SenderBACSNullable
     */
    public function getBacs()
    {
        return $this->container['bacs'];
    }

    /**
     * Sets bacs
     *
     * @param \OpenAPI\Client\Model\SenderBACSNullable $bacs bacs
     *
     * @return self
     */
    public function setBacs($bacs)
    {
        $this->container['bacs'] = $bacs;

        return $this;
    }

    /**
     * Gets iban
     *
     * @return string
     */
    public function getIban()
    {
        return $this->container['iban'];
    }

    /**
     * Sets iban
     *
     * @param string $iban The International Bank Account Number (IBAN) for the sender, if specified in the `/payment_initiation/payment/create` call.
     *
     * @return self
     */
    public function setIban($iban)
    {
        $this->container['iban'] = $iban;

        return $this;
    }

    /**
     * Gets initiated_refunds
     *
     * @return \OpenAPI\Client\Model\PaymentInitiationRefund[]|null
     */
    public function getInitiatedRefunds()
    {
        return $this->container['initiated_refunds'];
    }

    /**
     * Sets initiated_refunds
     *
     * @param \OpenAPI\Client\Model\PaymentInitiationRefund[]|null $initiated_refunds Initiated refunds associated with the payment.
     *
     * @return self
     */
    public function setInitiatedRefunds($initiated_refunds)
    {
        $this->container['initiated_refunds'] = $initiated_refunds;

        return $this;
    }

    /**
     * Gets wallet_id
     *
     * @return string|null
     */
    public function getWalletId()
    {
        return $this->container['wallet_id'];
    }

    /**
     * Sets wallet_id
     *
     * @param string|null $wallet_id The EMI (E-Money Institution) wallet that this payment is associated with, if any. This wallet is used as an intermediary account to enable Plaid to reconcile the settlement of funds for Payment Initiation requests.
     *
     * @return self
     */
    public function setWalletId($wallet_id)
    {
        $this->container['wallet_id'] = $wallet_id;

        return $this;
    }

    /**
     * Gets scheme
     *
     * @return \OpenAPI\Client\Model\PaymentScheme|null
     */
    public function getScheme()
    {
        return $this->container['scheme'];
    }

    /**
     * Sets scheme
     *
     * @param \OpenAPI\Client\Model\PaymentScheme|null $scheme scheme
     *
     * @return self
     */
    public function setScheme($scheme)
    {
        $this->container['scheme'] = $scheme;

        return $this;
    }

    /**
     * Gets adjusted_scheme
     *
     * @return \OpenAPI\Client\Model\PaymentScheme|null
     */
    public function getAdjustedScheme()
    {
        return $this->container['adjusted_scheme'];
    }

    /**
     * Sets adjusted_scheme
     *
     * @param \OpenAPI\Client\Model\PaymentScheme|null $adjusted_scheme adjusted_scheme
     *
     * @return self
     */
    public function setAdjustedScheme($adjusted_scheme)
    {
        $this->container['adjusted_scheme'] = $adjusted_scheme;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


