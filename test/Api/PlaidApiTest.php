<?php
/**
 * PlaidApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.64.13
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * PlaidApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class PlaidApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for accountsBalanceGet
     *
     * Retrieve real-time balance data.
     *
     */
    public function testAccountsBalanceGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for accountsGet
     *
     * Retrieve accounts.
     *
     */
    public function testAccountsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for applicationGet
     *
     * Retrieve information about a Plaid application.
     *
     */
    public function testApplicationGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for assetReportAuditCopyCreate
     *
     * Create Asset Report Audit Copy.
     *
     */
    public function testAssetReportAuditCopyCreate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for assetReportAuditCopyGet
     *
     * Retrieve an Asset Report Audit Copy.
     *
     */
    public function testAssetReportAuditCopyGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for assetReportAuditCopyRemove
     *
     * Remove Asset Report Audit Copy.
     *
     */
    public function testAssetReportAuditCopyRemove()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for assetReportCreate
     *
     * Create an Asset Report.
     *
     */
    public function testAssetReportCreate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for assetReportFilter
     *
     * Filter Asset Report.
     *
     */
    public function testAssetReportFilter()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for assetReportGet
     *
     * Retrieve an Asset Report.
     *
     */
    public function testAssetReportGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for assetReportPdfGet
     *
     * Retrieve a PDF Asset Report.
     *
     */
    public function testAssetReportPdfGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for assetReportRefresh
     *
     * Refresh an Asset Report.
     *
     */
    public function testAssetReportRefresh()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for assetReportRemove
     *
     * Delete an Asset Report.
     *
     */
    public function testAssetReportRemove()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for authGet
     *
     * Retrieve auth data.
     *
     */
    public function testAuthGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for bankTransferBalanceGet
     *
     * Get balance of your Bank Transfer account.
     *
     */
    public function testBankTransferBalanceGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for bankTransferCancel
     *
     * Cancel a bank transfer.
     *
     */
    public function testBankTransferCancel()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for bankTransferCreate
     *
     * Create a bank transfer.
     *
     */
    public function testBankTransferCreate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for bankTransferEventList
     *
     * List bank transfer events.
     *
     */
    public function testBankTransferEventList()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for bankTransferEventSync
     *
     * Sync bank transfer events.
     *
     */
    public function testBankTransferEventSync()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for bankTransferGet
     *
     * Retrieve a bank transfer.
     *
     */
    public function testBankTransferGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for bankTransferList
     *
     * List bank transfers.
     *
     */
    public function testBankTransferList()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for bankTransferMigrateAccount
     *
     * Migrate account into Bank Transfers.
     *
     */
    public function testBankTransferMigrateAccount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for bankTransferSweepGet
     *
     * Retrieve a sweep.
     *
     */
    public function testBankTransferSweepGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for bankTransferSweepList
     *
     * List sweeps.
     *
     */
    public function testBankTransferSweepList()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for categoriesGet
     *
     * Get Categories.
     *
     */
    public function testCategoriesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createPaymentToken
     *
     * Create payment token.
     *
     */
    public function testCreatePaymentToken()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for depositSwitchAltCreate
     *
     * Create a deposit switch without using Plaid Exchange.
     *
     */
    public function testDepositSwitchAltCreate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for depositSwitchCreate
     *
     * Create a deposit switch.
     *
     */
    public function testDepositSwitchCreate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for depositSwitchGet
     *
     * Retrieve a deposit switch.
     *
     */
    public function testDepositSwitchGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for depositSwitchTokenCreate
     *
     * Create a deposit switch token.
     *
     */
    public function testDepositSwitchTokenCreate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for employersSearch
     *
     * Search employer database.
     *
     */
    public function testEmployersSearch()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for employmentVerificationGet
     *
     * Retrieve a summary of an individual's employment information.
     *
     */
    public function testEmploymentVerificationGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for identityGet
     *
     * Retrieve identity data.
     *
     */
    public function testIdentityGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for incomeVerificationCreate
     *
     * (Deprecated) Create an income verification instance.
     *
     */
    public function testIncomeVerificationCreate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for incomeVerificationDocumentsDownload
     *
     * Download the original documents used for income verification.
     *
     */
    public function testIncomeVerificationDocumentsDownload()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for incomeVerificationPaystubGet
     *
     * (Deprecated) Retrieve information from a single paystub used for income verification.
     *
     */
    public function testIncomeVerificationPaystubGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for incomeVerificationPaystubsGet
     *
     * Retrieve information from the paystubs used for income verification.
     *
     */
    public function testIncomeVerificationPaystubsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for incomeVerificationPrecheck
     *
     * Check digital income verification eligibility and optimize conversion.
     *
     */
    public function testIncomeVerificationPrecheck()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for incomeVerificationRefresh
     *
     * Refresh an income verification.
     *
     */
    public function testIncomeVerificationRefresh()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for incomeVerificationSummaryGet
     *
     * (Deprecated) Retrieve a summary of information derived from income verification.
     *
     */
    public function testIncomeVerificationSummaryGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for incomeVerificationTaxformsGet
     *
     * Retrieve information from the tax documents used for income verification.
     *
     */
    public function testIncomeVerificationTaxformsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for institutionsGet
     *
     * Get details of all supported institutions.
     *
     */
    public function testInstitutionsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for institutionsGetById
     *
     * Get details of an institution.
     *
     */
    public function testInstitutionsGetById()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for institutionsSearch
     *
     * Search institutions.
     *
     */
    public function testInstitutionsSearch()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for investmentsHoldingsGet
     *
     * Get Investment holdings.
     *
     */
    public function testInvestmentsHoldingsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for investmentsTransactionsGet
     *
     * Get investment transactions.
     *
     */
    public function testInvestmentsTransactionsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for itemAccessTokenInvalidate
     *
     * Invalidate access_token.
     *
     */
    public function testItemAccessTokenInvalidate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for itemApplicationList
     *
     * List a user’s connected applications.
     *
     */
    public function testItemApplicationList()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for itemApplicationScopesUpdate
     *
     * Update the scopes of access for a particular application.
     *
     */
    public function testItemApplicationScopesUpdate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for itemCreatePublicToken
     *
     * Create public token.
     *
     */
    public function testItemCreatePublicToken()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for itemGet
     *
     * Retrieve an Item.
     *
     */
    public function testItemGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for itemImport
     *
     * Import Item.
     *
     */
    public function testItemImport()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for itemPublicTokenExchange
     *
     * Exchange public token for an access token.
     *
     */
    public function testItemPublicTokenExchange()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for itemRemove
     *
     * Remove an Item.
     *
     */
    public function testItemRemove()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for itemWebhookUpdate
     *
     * Update Webhook URL.
     *
     */
    public function testItemWebhookUpdate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for liabilitiesGet
     *
     * Retrieve Liabilities data.
     *
     */
    public function testLiabilitiesGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for linkTokenCreate
     *
     * Create Link Token.
     *
     */
    public function testLinkTokenCreate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for linkTokenGet
     *
     * Get Link Token.
     *
     */
    public function testLinkTokenGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for paymentInitiationPaymentCreate
     *
     * Create a payment.
     *
     */
    public function testPaymentInitiationPaymentCreate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for paymentInitiationPaymentGet
     *
     * Get payment details.
     *
     */
    public function testPaymentInitiationPaymentGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for paymentInitiationPaymentList
     *
     * List payments.
     *
     */
    public function testPaymentInitiationPaymentList()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for paymentInitiationPaymentReverse
     *
     * Reverse an existing payment.
     *
     */
    public function testPaymentInitiationPaymentReverse()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for paymentInitiationRecipientCreate
     *
     * Create payment recipient.
     *
     */
    public function testPaymentInitiationRecipientCreate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for paymentInitiationRecipientGet
     *
     * Get payment recipient.
     *
     */
    public function testPaymentInitiationRecipientGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for paymentInitiationRecipientList
     *
     * List payment recipients.
     *
     */
    public function testPaymentInitiationRecipientList()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for processorApexProcessorTokenCreate
     *
     * Create Apex bank account token.
     *
     */
    public function testProcessorApexProcessorTokenCreate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for processorAuthGet
     *
     * Retrieve Auth data.
     *
     */
    public function testProcessorAuthGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for processorBalanceGet
     *
     * Retrieve Balance data.
     *
     */
    public function testProcessorBalanceGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for processorBankTransferCreate
     *
     * Create a bank transfer as a processor.
     *
     */
    public function testProcessorBankTransferCreate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for processorIdentityGet
     *
     * Retrieve Identity data.
     *
     */
    public function testProcessorIdentityGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for processorStripeBankAccountTokenCreate
     *
     * Create Stripe bank account token.
     *
     */
    public function testProcessorStripeBankAccountTokenCreate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for processorTokenCreate
     *
     * Create processor token.
     *
     */
    public function testProcessorTokenCreate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sandboxBankTransferFireWebhook
     *
     * Manually fire a Bank Transfer webhook.
     *
     */
    public function testSandboxBankTransferFireWebhook()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sandboxBankTransferSimulate
     *
     * Simulate a bank transfer event in Sandbox.
     *
     */
    public function testSandboxBankTransferSimulate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sandboxIncomeFireWebhook
     *
     * Manually fire an Income webhook.
     *
     */
    public function testSandboxIncomeFireWebhook()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sandboxItemFireWebhook
     *
     * Fire a test webhook.
     *
     */
    public function testSandboxItemFireWebhook()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sandboxItemResetLogin
     *
     * Force a Sandbox Item into an error state.
     *
     */
    public function testSandboxItemResetLogin()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sandboxItemSetVerificationStatus
     *
     * Set verification status for Sandbox account.
     *
     */
    public function testSandboxItemSetVerificationStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sandboxOauthSelectAccounts
     *
     * Save the selected accounts when connecting to the Platypus Oauth institution.
     *
     */
    public function testSandboxOauthSelectAccounts()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sandboxProcessorTokenCreate
     *
     * Create a test Item and processor token.
     *
     */
    public function testSandboxProcessorTokenCreate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sandboxPublicTokenCreate
     *
     * Create a test Item.
     *
     */
    public function testSandboxPublicTokenCreate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sandboxTransferRepaymentSimulate
     *
     * Trigger the creation of a repayment.
     *
     */
    public function testSandboxTransferRepaymentSimulate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sandboxTransferSimulate
     *
     * Simulate a transfer event in Sandbox.
     *
     */
    public function testSandboxTransferSimulate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sandboxTransferSweepSimulate
     *
     * Simulate creating a sweep.
     *
     */
    public function testSandboxTransferSweepSimulate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for signalDecisionReport
     *
     * Report whether you initiated an ACH transaction.
     *
     */
    public function testSignalDecisionReport()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for signalEvaluate
     *
     * Evaluate a planned ACH transaction.
     *
     */
    public function testSignalEvaluate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for signalReturnReport
     *
     * Report a return for an ACH transaction.
     *
     */
    public function testSignalReturnReport()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for transactionsGet
     *
     * Get transaction data.
     *
     */
    public function testTransactionsGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for transactionsRecurringGet
     *
     * Get streams of recurring transactions.
     *
     */
    public function testTransactionsRecurringGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for transactionsRefresh
     *
     * Refresh transaction data.
     *
     */
    public function testTransactionsRefresh()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for transactionsSync
     *
     * Get incremental transaction updates on an Item.
     *
     */
    public function testTransactionsSync()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for transferAuthorizationCreate
     *
     * Create a transfer authorization.
     *
     */
    public function testTransferAuthorizationCreate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for transferCancel
     *
     * Cancel a transfer.
     *
     */
    public function testTransferCancel()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for transferCreate
     *
     * Create a transfer.
     *
     */
    public function testTransferCreate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for transferEventList
     *
     * List transfer events.
     *
     */
    public function testTransferEventList()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for transferEventSync
     *
     * Sync transfer events.
     *
     */
    public function testTransferEventSync()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for transferGet
     *
     * Retrieve a transfer.
     *
     */
    public function testTransferGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for transferIntentCreate
     *
     * Create a transfer intent object to invoke the Transfer UI.
     *
     */
    public function testTransferIntentCreate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for transferIntentGet
     *
     * Retrieve more information about a transfer intent.
     *
     */
    public function testTransferIntentGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for transferList
     *
     * List transfers.
     *
     */
    public function testTransferList()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for transferRepaymentList
     *
     * Lists historical repayments.
     *
     */
    public function testTransferRepaymentList()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for transferRepaymentReturnList
     *
     * List the returns included in a repayment.
     *
     */
    public function testTransferRepaymentReturnList()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for transferSweepGet
     *
     * Retrieve a sweep.
     *
     */
    public function testTransferSweepGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for transferSweepList
     *
     * List sweeps.
     *
     */
    public function testTransferSweepList()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for walletGet
     *
     * Fetch an e-wallet.
     *
     */
    public function testWalletGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for walletTransactionExecute
     *
     * Execute a transaction using an e-wallet.
     *
     */
    public function testWalletTransactionExecute()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for walletTransactionsList
     *
     * List e-wallet transactions.
     *
     */
    public function testWalletTransactionsList()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for webhookVerificationKeyGet
     *
     * Get webhook verification key.
     *
     */
    public function testWebhookVerificationKeyGet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
